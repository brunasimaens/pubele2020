{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;}
{\colortbl;\red255\green255\blue255;\red25\green60\blue255;\red0\green0\blue0;\red0\green0\blue0;
}
{\*\expandedcolortbl;;\cssrgb\c12594\c35385\c100000;\cssrgb\c0\c0\c0;\csgray\c0;
}
\paperw11900\paperh16840\margl1440\margr1440\vieww15820\viewh17560\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx4909\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs28 \cf0 Nivel l\'e9xico \
N\'edvel sint\'e1tico - como se palavras se organizam para formular frases \
Nivel semantico \
N\'edvel pragm\'e1tico - rea\'e7\'e3o ao que foi dito. Como seria esperado reagir ao que foi dito. \
\
XML \
- exemplo de processador de xml para html \
- xml : linguagem que permite descrever informa\'e7\'e3o. Ex: o que o texto que est\'e1 escrito representa (tags - por exemplo date)\
- html : em vez de descrever a informa\'e7\'e3o, descreve como a informa\'e7\'e3o est\'e1 formatada, como esta ser\'e1 vis\'edvel\
\
Exerc\'edcio - passar um documento xml para documento html\
Hoje: fazer a estrutura de um relat\'f3rio em xml, e utilizar essa estrutura para criar um template em html. \
\
\
Exemplo estrutura:\
\
Conceito: quick reference \
	- 1. Descri\'e7\'e3o de comando\
			- indica\'e7\'e3o comando\
			- exemplo uso\
			- descri\'e7\'e3o textual \
\
Report\
	- title\
	- date\
	- autores\
		*autor\
			- nome\
			- n\'ba aluno\
			- git\
			- email\
	- descri\'e7\'e3o\
\
\ul Em XML:\
\ulnone \
<report>\
	<title>Title</title>\
	<date>DD/MM/AAAA</data>\
	<team>\
		<element>\
			<name>Nome</nome>\
			<number>Numero</numero>\
			<git> website </git>\
		</element>\
		<element>\
			<name>Nome</nome>\
			<number>Numero</numero>\
			<git> website </git>\
		</element>\
	</team>\
	<description>Descri\'e7\'e3o do trabalho</description>\
</report>\
\
\
\'97 para confirmar se o c\'f3digo est\'e1 certo:\
No terminal: \cb2 xmllint filename.xml\cb1 \
- extrair ocorr\'eancias de name \
No terminal: 
\fs22 \cf3 \cb2 \CocoaLigature0 xmllint -xpath '//name' reportxml.xml \cf4 \cb1 \
	
\fs28 \cf0 \CocoaLigature1 \
\
Passar documento xml para html\
Criar ficheiro: final.html\
\
\ul Em HTML:\ulnone \
\
<! Doctype html >\
\
<html>\
	<head>\
		<title>#Title </title>\
		<meta charset="utf-8"/>\
	</head>\
	<body>\
		<h1>#Title</h1>\
		<p>#Data</p>\
		<ul>\
			#team\
		</ul>\
		<h2>#Descri\'e7\'e3o</h2>\
		<p>#Descri\'e7\'e3o</p>\
	</body>\
</html>\ul \
\ulnone \
\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Como juntar a informa\'e7\'e3o do xml e coloca-la no template do html? \ul \
\ulnone - num ficheiro python:\
\
info=\{\
"Title":"Title", \
"Date":"DD/MM/AAAA", \
"Team":"<li>#Nome<br>#Numero<br>#Email<br></li>",\
"Description":"Descri\'e7\'e3o do trabalho"\
\}\
\
\
with open("template.html", 'r') as f:\
	template=f.read()\
	\ul \
\ulnone \'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\'97\
Bom editor para xml - oxygen \
\
<li>#Nome<br>#Numero<br>#Email<br></li>\
\'97\'97\'97\'97\'97\'97\
Terminal:\ul \
\
\
\ulnone Python3 report2html.py (executar o ficheiro py)\
\
Python3 report2html.py > report.html\
(Transformar o ficheiro py em html)\
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx4909\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0
\cf0 \ul \ulc0 \
\
\
\
\
}